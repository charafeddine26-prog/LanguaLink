Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.13.0\"\r\nkotlin = \"2.0.21\"\r\ncoreKtx = \"1.17.0\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.3.0\"\r\nespressoCore = \"3.7.0\"\r\nappcompat = \"1.7.1\"\r\nmaterial = \"1.13.0\"\r\nactivity = \"1.11.0\"\r\nconstraintlayout = \"2.2.1\"\r\nroom = \"2.6.1\"\r\nhilt = \"2.51.1\"\r\nksp = \"2.0.21-1.0.21\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nandroidx-room-runtime = { group = \"androidx.room\", name = \"room-runtime\", version.ref = \"room\" }\r\nandroidx-room-compiler = { group = \"androidx.room\", name = \"room-compiler\", version.ref = \"room\" }\r\nandroidx-room-ktx = { group = \"androidx.room\", name = \"room-ktx\", version.ref = \"room\" }\r\nhilt-android = { group = \"com.google.dagger\", name = \"hilt-android\", version.ref = \"hilt\" }\r\nhilt-compiler = { group = \"com.google.dagger\", name = \"hilt-compiler\", version.ref = \"hilt\" }\r\n\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\nkotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\nkotlin-ksp = { id = \"com.google.devtools.ksp\", version.ref = \"ksp\" }\r\nhilt = { id = \"com.google.dagger.hilt.android\", version.ref = \"hilt\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 829478dc9d2f26066dc52a5a886dde1233935d57)
+++ b/gradle/libs.versions.toml	(date 1761056552140)
@@ -1,37 +1,64 @@
 [versions]
-agp = "8.13.0"
-kotlin = "2.0.21"
-coreKtx = "1.17.0"
-junit = "4.13.2"
-junitVersion = "1.3.0"
-espressoCore = "3.7.0"
-appcompat = "1.7.1"
-material = "1.13.0"
-activity = "1.11.0"
-constraintlayout = "2.2.1"
-room = "2.6.1"
-hilt = "2.51.1"
-ksp = "2.0.21-1.0.21"
+# 核心工具链
+agp = "8.4.1"                # Android Gradle Plugin
+kotlin = "2.0.0"             # Kotlin 版本
+ksp = "2.0.0-1.0.21"         # KSP 版本, 必须与 Kotlin 版本前缀匹配
+
+# 主要依赖库
+hilt = "2.51.1"              # Dagger Hilt
+androidxHilt = "1.2.0"       # AndroidX Hilt 扩展 (例如 for ViewModel)
+room = "2.6.1"               # Room
+
+# 其他 AndroidX & UI 库
+coreKtx = "1.13.1"
+appcompat = "1.7.0"
+material = "1.12.0"
+activity = "1.9.0"
+navigationCompose = "2.7.7"
+
+# --- 新增和修改的部分 ---
+# Jetpack Compose - 版本要与您的 compileSdk=34 兼容
+composeBom = "2024.02.01"
+# -------------------------
 
 [libraries]
+# Dagger Hilt
+hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
+hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
+androidx-hilt-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "androidxHilt" }
+
+# Room
+room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
+room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
+room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
+
+# AndroidX Core
 androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
-junit = { group = "junit", name = "junit", version.ref = "junit" }
-androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
-androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
 androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
+androidx-activity = { group = "androidx.activity", name = "activity-ktx", version.ref = "activity"}
 material = { group = "com.google.android.material", name = "material", version.ref = "material" }
-androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
-androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
-androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
-androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
-androidx-room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
-hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
-hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
 
+# --- 新增的部分 ---
+# Jetpack Compose - BOM (物料清单，统一管理所有Compose库的版本)
+androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
+
+# Compose 核心库 (BOM会管理它们的版本，所以这里不需要写 version)
+androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
+androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
+androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
+androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
+androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
+androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
+androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
+# ------------------
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
 kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
-kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
+ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
 hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
 
+# --- 新增的部分 ---
+# 定义 Compose 编译器插件
+kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
+# ------------------
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.langualink\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContentView(R.layout.activity_main)\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->\r\n            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)\r\n            insets\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/MainActivity.kt b/app/src/main/java/com/example/langualink/MainActivity.kt
--- a/app/src/main/java/com/example/langualink/MainActivity.kt	(revision 829478dc9d2f26066dc52a5a886dde1233935d57)
+++ b/app/src/main/java/com/example/langualink/MainActivity.kt	(date 1761055847047)
@@ -1,20 +1,126 @@
 package com.example.langualink
 
 import android.os.Bundle
-import androidx.activity.enableEdgeToEdge
-import androidx.appcompat.app.AppCompatActivity
-import androidx.core.view.ViewCompat
-import androidx.core.view.WindowInsetsCompat
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Book
+import androidx.compose.material.icons.filled.Groups
+import androidx.compose.material.icons.filled.Person
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.navigation.NavDestination.Companion.hierarchy
+import androidx.navigation.NavGraph.Companion.findStartDestination
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.currentBackStackEntryAsState
+import androidx.navigation.compose.rememberNavController
+import com.example.langualink.ui.community.CommunityScreen
+import com.example.langualink.ui.learn.LearnScreen
+import com.example.langualink.ui.onboarding.OnboardingStepOneScreen
+import com.example.langualink.ui.onboarding.OnboardingStepTwoScreen
+import com.example.langualink.ui.profile.ProfileScreen
+import com.example.langualink.ui.theme.LanguaLinkTheme
+import dagger.hilt.android.AndroidEntryPoint
 
-class MainActivity : AppCompatActivity() {
+object AppRoutes {
+    const val ONBOARDING_STEP_1 = "onboarding_step_1"
+    const val ONBOARDING_STEP_2 = "onboarding_step_2"
+    const val MAIN_CONTENT = "main_content"
+}
+
+@AndroidEntryPoint
+class MainActivity : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-        enableEdgeToEdge()
-        setContentView(R.layout.activity_main)
-        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
-            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
-            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
-            insets
+        setContent {
+            LanguaLinkTheme {
+                AppRootNavigation()
+            }
         }
     }
+}
+
+@Composable
+fun AppRootNavigation() {
+    val navController = rememberNavController()
+
+    val onboardingCompleted = false // TODO: Logic control
+
+    val startDestination = if (onboardingCompleted) {
+        AppRoutes.MAIN_CONTENT
+    } else {
+        AppRoutes.ONBOARDING_STEP_1
+    }
+
+    NavHost(navController = navController, startDestination = startDestination) {
+
+        composable(AppRoutes.ONBOARDING_STEP_1) {
+            OnboardingStepOneScreen(onNextClick = {
+                navController.navigate(AppRoutes.ONBOARDING_STEP_2)
+            })
+        }
+        composable(AppRoutes.ONBOARDING_STEP_2) {
+            OnboardingStepTwoScreen(onFinishClick = {
+                // TODO: Sava variable exact
+
+                navController.navigate(AppRoutes.MAIN_CONTENT) {
+                    popUpTo(AppRoutes.ONBOARDING_STEP_1) { inclusive = true }
+                }
+            })
+        }
+
+        composable(AppRoutes.MAIN_CONTENT) {
+            MainScreenWithBottomNav()
+        }
+    }
+}
+
+@Composable
+fun MainScreenWithBottomNav() {
+    val navController = rememberNavController()
+    Scaffold(
+        bottomBar = {
+            val items = listOf(
+                NavScreen.Learn,
+                NavScreen.Community,
+                NavScreen.Profile
+            )
+            NavigationBar {
+                val navBackStackEntry by navController.currentBackStackEntryAsState()
+                val currentDestination = navBackStackEntry?.destination
+                items.forEach { screen ->
+                    NavigationBarItem(
+                        icon = { Icon(screen.icon, contentDescription = null) },
+                        label = { Text(screen.label) },
+                        selected = currentDestination?.hierarchy?.any { it.route == screen.route } == true,
+                        onClick = {
+                            navController.navigate(screen.route) {
+                                popUpTo(navController.graph.findStartDestination().id) { saveState = true }
+                                launchSingleTop = true
+                                restoreState = true
+                            }
+                        }
+                    )
+                }
+            }
+        }
+    ) { innerPadding ->
+        NavHost(navController, startDestination = NavScreen.Learn.route, Modifier.padding(innerPadding)) {
+            composable(NavScreen.Learn.route) { LearnScreen() }
+            composable(NavScreen.Community.route) { CommunityScreen() }
+            composable(NavScreen.Profile.route) { ProfileScreen() }
+        }
+    }
+}
+
+sealed class NavScreen(val route: String, val label: String, val icon: ImageVector) {
+    object Learn : NavScreen("learn", "Apprendre", Icons.Default.Book)
+    object Community : NavScreen("community", "Communauté", Icons.Default.Groups)
+    object Profile : NavScreen("profile", "Profil", Icons.Default.Person)
 }
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n    alias(libs.plugins.kotlin.android)\r\n    alias(libs.plugins.kotlin.ksp)\r\n    alias(libs.plugins.hilt)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.langualink\"\r\n    compileSdk = 36\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.langualink\"\r\n        minSdk = 36\r\n        targetSdk = 36\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"11\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.androidx.core.ktx)\r\n    implementation(libs.androidx.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.androidx.activity)\r\n    implementation(libs.androidx.constraintlayout)\r\n\r\n    // Room\r\n    implementation(libs.androidx.room.runtime)\r\n    implementation(libs.androidx.room.ktx)\r\n    ksp(libs.androidx.room.compiler)\r\n\r\n    // Hilt\r\n    implementation(libs.hilt.android)\r\n    ksp(libs.hilt.compiler)\r\n\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.androidx.junit)\r\n    androidTestImplementation(libs.androidx.espresso.core)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 829478dc9d2f26066dc52a5a886dde1233935d57)
+++ b/app/build.gradle.kts	(date 1761056567853)
@@ -1,60 +1,88 @@
 plugins {
     alias(libs.plugins.android.application)
     alias(libs.plugins.kotlin.android)
-    alias(libs.plugins.kotlin.ksp)
+    alias(libs.plugins.ksp)
     alias(libs.plugins.hilt)
+    alias(libs.plugins.kotlin.compose) // <-- 新增
 }
 
 android {
     namespace = "com.example.langualink"
-    compileSdk = 36
+    compileSdk = 34
 
     defaultConfig {
         applicationId = "com.example.langualink"
-        minSdk = 36
-        targetSdk = 36
+        minSdk = 26
+        targetSdk = 34
         versionCode = 1
         versionName = "1.0"
-
         testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+        // 为 Compose 添加 vector drawable 支持
+        vectorDrawables {
+            useSupportLibrary = true
+        }
     }
 
     buildTypes {
         release {
             isMinifyEnabled = false
-            proguardFiles(
-                getDefaultProguardFile("proguard-android-optimize.txt"),
-                "proguard-rules.pro"
-            )
+            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
         }
     }
     compileOptions {
-        sourceCompatibility = JavaVersion.VERSION_11
-        targetCompatibility = JavaVersion.VERSION_11
+        sourceCompatibility = JavaVersion.VERSION_17
+        targetCompatibility = JavaVersion.VERSION_17
     }
     kotlinOptions {
-        jvmTarget = "11"
+        jvmTarget = "17"
+    }
+    // --- 新增的部分 ---
+    buildFeatures {
+        // 启用 Jetpack Compose
+        compose = true
     }
+    packaging {
+        resources {
+            excludes += "/META-INF/{AL2.0,LGPL2.1}"
+        }
+    }
+    // ------------------
 }
 
 dependencies {
-
+    // 您已有的依赖
     implementation(libs.androidx.core.ktx)
     implementation(libs.androidx.appcompat)
     implementation(libs.material)
-    implementation(libs.androidx.activity)
-    implementation(libs.androidx.constraintlayout)
+    // 注意：我们将使用 activity-compose 替换 activity
+    // implementation(libs.androidx.activity)
 
     // Room
-    implementation(libs.androidx.room.runtime)
-    implementation(libs.androidx.room.ktx)
-    ksp(libs.androidx.room.compiler)
+    implementation(libs.room.runtime)
+    implementation(libs.room.ktx)
+    ksp(libs.room.compiler)
 
     // Hilt
     implementation(libs.hilt.android)
     ksp(libs.hilt.compiler)
+    ksp(libs.androidx.hilt.compiler)
+
+    // --- 新增的 Compose 依赖 ---
+    // Jetpack Compose BOM
+    implementation(platform(libs.androidx.compose.bom))
 
-    testImplementation(libs.junit)
-    androidTestImplementation(libs.androidx.junit)
-    androidTestImplementation(libs.androidx.espresso.core)
+    // Compose UI 核心库
+    implementation(libs.androidx.compose.ui)
+    implementation(libs.androidx.compose.ui.graphics)
+    implementation(libs.androidx.compose.ui.tooling.preview)
+    implementation(libs.androidx.compose.material3) // 使用最新的 Material 3 设计
+
+    // Activity Compose 集成
+    implementation("androidx.activity:activity-compose:1.9.0") // 明确指定 activity-compose 版本
+
+    // Compose 调试工具 (只在 debug 构建时使用)
+    debugImplementation(libs.androidx.compose.ui.tooling)
+    implementation(libs.androidx.compose.material.icons.extended) // <-- 新增这一行
+    implementation(libs.androidx.navigation.compose)
+    // -------------------------
 }
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepTwoScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepTwoScreen.kt b/app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepTwoScreen.kt
new file mode 100644
--- /dev/null	(date 1761055875833)
+++ b/app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepTwoScreen.kt	(date 1761055875833)
@@ -0,0 +1,24 @@
+package com.example.langualink.ui.onboarding
+
+import androidx.compose.foundation.layout.*
+import androidx.compose.material3.Button
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+
+@Composable
+fun OnboardingStepTwoScreen(onFinishClick: () -> Unit) {
+    Column(
+        modifier = Modifier.fillMaxSize(),
+        verticalArrangement = Arrangement.Center,
+        horizontalAlignment = Alignment.CenterHorizontally
+    ) {
+        Text(text = "before start - page two")
+        Spacer(modifier = Modifier.height(16.dp))
+        Button(onClick = onFinishClick) {
+            Text("finish")
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepOneScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepOneScreen.kt b/app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepOneScreen.kt
new file mode 100644
--- /dev/null	(date 1761055875829)
+++ b/app/src/main/java/com/example/langualink/ui/onboarding/OnboardingStepOneScreen.kt	(date 1761055875829)
@@ -0,0 +1,24 @@
+package com.example.langualink.ui.onboarding
+
+import androidx.compose.foundation.layout.*
+import androidx.compose.material3.Button
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+
+@Composable
+fun OnboardingStepOneScreen(onNextClick: () -> Unit) {
+    Column(
+        modifier = Modifier.fillMaxSize(),
+        verticalArrangement = Arrangement.Center,
+        horizontalAlignment = Alignment.CenterHorizontally
+    ) {
+            Text(text = "before start - page one")
+        Spacer(modifier = Modifier.height(16.dp))
+        Button(onClick = onNextClick) {
+            Text("next step")
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/theme/Color.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/theme/Color.kt b/app/src/main/java/com/example/langualink/ui/theme/Color.kt
new file mode 100644
--- /dev/null	(date 1761055875825)
+++ b/app/src/main/java/com/example/langualink/ui/theme/Color.kt	(date 1761055875825)
@@ -0,0 +1,11 @@
+package com.example.langualink.ui.theme
+
+import androidx.compose.ui.graphics.Color
+
+val Purple80 = Color(0xFFD0BCFF)
+val PurpleGrey80 = Color(0xFFCCC2DC)
+val Pink80 = Color(0xFFEFB8C8)
+
+val Purple40 = Color(0xFF6650a4)
+val PurpleGrey40 = Color(0xFF625b71)
+val Pink40 = Color(0xFF7D5260)
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/theme/Typography.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/theme/Typography.kt b/app/src/main/java/com/example/langualink/ui/theme/Typography.kt
new file mode 100644
--- /dev/null	(date 1761055875820)
+++ b/app/src/main/java/com/example/langualink/ui/theme/Typography.kt	(date 1761055875820)
@@ -0,0 +1,17 @@
+package com.example.langualink.ui.theme
+
+import androidx.compose.material3.Typography
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.unit.sp
+
+val Typography = Typography(
+    bodyLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 16.sp,
+        lineHeight = 24.sp,
+        letterSpacing = 0.5.sp
+    )
+)
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/theme/Theme.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/theme/Theme.kt b/app/src/main/java/com/example/langualink/ui/theme/Theme.kt
new file mode 100644
--- /dev/null	(date 1761055875814)
+++ b/app/src/main/java/com/example/langualink/ui/theme/Theme.kt	(date 1761055875814)
@@ -0,0 +1,59 @@
+package com.example.langualink.ui.theme
+
+import android.app.Activity
+import android.os.Build
+import androidx.compose.foundation.isSystemInDarkTheme
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.darkColorScheme
+import androidx.compose.material3.dynamicDarkColorScheme
+import androidx.compose.material3.dynamicLightColorScheme
+import androidx.compose.material3.lightColorScheme
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.SideEffect
+import androidx.compose.ui.graphics.toArgb
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.platform.LocalView
+import androidx.core.view.WindowCompat
+
+private val DarkColorScheme = darkColorScheme(
+    primary = Purple80,
+    secondary = PurpleGrey80,
+    tertiary = Pink80
+)
+
+private val LightColorScheme = lightColorScheme(
+    primary = Purple40,
+    secondary = PurpleGrey40,
+    tertiary = Pink40
+)
+
+@Composable
+fun LanguaLinkTheme(
+    darkTheme: Boolean = isSystemInDarkTheme(),
+    dynamicColor: Boolean = true,
+    content: @Composable () -> Unit
+) {
+    val colorScheme = when {
+        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {
+            val context = LocalContext.current
+            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)
+        }
+
+        darkTheme -> DarkColorScheme
+        else -> LightColorScheme
+    }
+    val view = LocalView.current
+    if (!view.isInEditMode) {
+        SideEffect {
+            val window = (view.context as Activity).window
+            window.statusBarColor = colorScheme.primary.toArgb()
+            WindowCompat.getInsetsController(window, view).isAppearanceLightStatusBars = darkTheme
+        }
+    }
+
+    MaterialTheme(
+        colorScheme = colorScheme,
+        typography = Typography,
+        content = content
+    )
+}
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/profile/ProfilScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/profile/ProfilScreen.kt b/app/src/main/java/com/example/langualink/ui/profile/ProfilScreen.kt
new file mode 100644
--- /dev/null	(date 1761055875851)
+++ b/app/src/main/java/com/example/langualink/ui/profile/ProfilScreen.kt	(date 1761055875851)
@@ -0,0 +1,15 @@
+package com.example.langualink.ui.profile
+
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+
+@Composable
+fun ProfileScreen() {
+    Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
+        Text(text = "(Profile Screen)")
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/learn/LearnScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/learn/LearnScreen.kt b/app/src/main/java/com/example/langualink/ui/learn/LearnScreen.kt
new file mode 100644
--- /dev/null	(date 1761055875845)
+++ b/app/src/main/java/com/example/langualink/ui/learn/LearnScreen.kt	(date 1761055875845)
@@ -0,0 +1,15 @@
+package com.example.langualink.ui.learn
+
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+
+@Composable
+fun LearnScreen() {
+    Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
+        Text(text = "(Learn Screen)")
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/langualink/ui/community/CommunityScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/langualink/ui/community/CommunityScreen.kt b/app/src/main/java/com/example/langualink/ui/community/CommunityScreen.kt
new file mode 100644
--- /dev/null	(date 1761055875839)
+++ b/app/src/main/java/com/example/langualink/ui/community/CommunityScreen.kt	(date 1761055875839)
@@ -0,0 +1,15 @@
+package com.example.langualink.ui.community
+
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+
+@Composable
+fun CommunityScreen() {
+    Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
+        Text(text = "(Community Screen)")
+    }
+}
\ No newline at end of file
